---
# Enviorment Provisioning
  - name: "Provision Enviorment"
    hosts: linux
    become: true
    vars_files:
      - vars.yml
    tasks:

# /////////////////////////////// Packages //////////////////////////////////
    - name: Remove useless packages from the cache
      apt:
        autoclean: yes

    - name: Remove dependencies that are no longer required
      apt:
        autoremove: yes 

    - name: Update repositories cache and install "net-tools" package
      apt:
        name: net-tools
        update_cache: yes

    - name: Update repositories cache and install "lshw" package
      apt:
        name: lshw
        update_cache: yes

    - name: Update repositories cache and install "openssh-server" package
      apt:
        name: openssh-server
        update_cache: yes

    - name: Update repositories cache and install "fail2ban" package
      apt:
        name: fail2ban
        update_cache: yes

    - name: Update repositories cache and install "ufw" package
      apt:
        name: ufw
        update_cache: yes
         
    - name: Update repositories cache and install "git" package
      apt:
        name: git
        update_cache: yes
# /////////////////////////////////////////////////////////////////////////


# Docker Install (proper way)
    - name: Install required system packages for Docker
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: "Get system hardware information"
      shell: "lshw"
      register: "lshw"
    - debug: var=lshw.stdout_lines

      
# Network And Security


    - name: "Set SSH Enviorment to alternate port"
      shell: "ufw allow ssh && \
                ufw allow {{ssh_port}}"

    - name: "Download SSH Config"
      shell: "cd {{homedir}} && rm -rfv {{homedir}}/provision-new-env && git clone https://github.com/jtmb/provision-new-env.git"

    - name: "Move SSH Config"
      shell: "cp {{homedir}}/provision-new-env/sshd_config /etc/ssh/sshd_config"

    - name: Creates SSH hidden directory
      file:
          path: "{{homedir}}/.ssh"
          state: directory

    - name: "Restart SSH Service"
      shell: "systemctl restart sshd"
      register: "sshd"
    - debug: var=sshd.stdout_lines

    - name: "Create Endless SSH Docker Container"
      shell: "docker rm -f endlessh && docker run -d \
          --name=endlessh \
          -e PUID=1000 \
          -e PGID=1000 \
          -e TZ=America/Toronto \
          -e MSDELAY=10000 `#optional` \
          -e MAXLINES=32 `#optional` \
          -e MAXCLIENTS=4096 `#optional` \
          -e LOGFILE=true `#optional` \
          -e BINDFAMILY= `#optional` \
          -p 22:2222 \
          -v {{homedir}}/container-program-files/endlessh:/config `#optional` \
          --restart unless-stopped \
          lscr.io/linuxserver/endlessh"